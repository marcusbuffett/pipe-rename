name: Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  crate_metadata:
    name: Extract crate metadata
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Extract crate information
      id: crate_metadata
      run: |
        echo "name=pipe-rename" | tee -a $GITHUB_OUTPUT
        cargo metadata --no-deps --format-version 1 | jq -r '"version=" + .packages[0].version' | tee -a $GITHUB_OUTPUT
    outputs:
      name: ${{ steps.crate_metadata.outputs.name }}
      version: ${{ steps.crate_metadata.outputs.version }}

  ensure_cargo_fmt:
    name: Ensure 'cargo fmt' has been run
    runs-on: ubuntu-22.04
    steps:
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
    - uses: actions/checkout@v3
    - run: cargo fmt -- --check

  build:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    needs: crate_metadata
    strategy:
      matrix:
        job:
          - { target: x86_64-apple-darwin      , os: macos-12     }
          - { target: x86_64-pc-windows-msvc   , os: windows-2019 }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-22.04 }
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.job.target }}

    - name: Build
      shell: bash
      run: cargo build --locked --release --target=${{ matrix.job.target }}

    - name: Set binary name & path
      id: bin
      shell: bash
      run: |
        # Figure out suffix of binary
        EXE_suffix=""
        case ${{ matrix.job.target }} in
          *-pc-windows-*) EXE_suffix=".exe" ;;
        esac;

        # Setup paths
        BIN_NAME="${{ needs.crate_metadata.outputs.name }}${EXE_suffix}"
        BIN_PATH="target/${{ matrix.job.target }}/release/${BIN_NAME}"

        # Let subsequent steps know where to find the binary
        echo "BIN_PATH=${BIN_PATH}" >> $GITHUB_OUTPUT
        echo "BIN_NAME=${BIN_NAME}" >> $GITHUB_OUTPUT

  # build:
  #   name: Publishing for ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [macos-latest, ubuntu-latest, windows-latest]
  #       rust: [stable]
  #       include:
  #         - os: macos-latest
  #           artifact_prefix: macos
  #           target: x86_64-apple-darwin
  #           binary_postfix: ""
  #         - os: ubuntu-latest
  #           artifact_prefix: linux
  #           target: x86_64-unknown-linux-gnu
  #           binary_postfix: ""
  #         - os: windows-latest
  #           artifact_prefix: windows
  #           target: x86_64-pc-windows-msvc
  #           binary_postfix: ".exe"

  #   steps:
  #     - name: Installing Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Cargo build
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #         toolchain: ${{ matrix.rust }}
  #         args: --release --target ${{ matrix.target }}

  #     - name: Packaging final binary
  #       shell: bash
  #       run: |
  #         cd target/${{ matrix.target }}/release
  #         strip pipe-rename${{ matrix.binary_postfix }}
  #         tar czvf pipe-rename-${{ matrix.artifact_prefix }}.tar.gz pipe-rename${{ matrix.binary_postfix }}

  #         if [[ ${{ runner.os }} == 'Windows' ]]; then
  #           certutil -hashfile pipe-rename-${{ matrix.artifact_prefix }}.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > pipe-rename-${{ matrix.artifact_prefix }}.sha256
  #         else
  #           shasum -a 256 pipe-rename-${{ matrix.artifact_prefix }}.tar.gz > pipe-rename-${{ matrix.artifact_prefix }}.sha256
  #         fi
  #     - name: Releasing assets
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: |
  #           target/${{ matrix.target }}/release/pipe-rename-${{ matrix.artifact_prefix }}.tar.gz
  #           target/${{ matrix.target }}/release/pipe-rename-${{ matrix.artifact_prefix }}.sha256
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
